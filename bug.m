In Objective-C, a subtle error can arise when dealing with `NSDecimalNumber` and its comparison methods.  Incorrect usage of `compare:` can lead to unexpected results, especially when comparing numbers with different scales (number of decimal places). For instance, comparing "1.0" and "1.00" might not return `NSOrderedSame` as expected if the comparison isn't handled carefully.  Another common pitfall is overlooking potential exceptions during arithmetic operations, such as division by zero, which can lead to crashes.